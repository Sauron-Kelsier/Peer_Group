/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package generalServer;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.ResultSet;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import myServer.viewPerformanceActual;
import myServer.viewQuestions;

/**
 *
 * @author sukalyan14
 */
public class ViewQuestionGeneral extends javax.swing.JFrame {
    
    Connection databaseConnection;
    /**
     * Creates new form viewQuestions
     */
    public ViewQuestionGeneral() {
        initComponents();
    }
    public ViewQuestionGeneral(Connection db) {
        initComponents();
        databaseConnection=db;
        
        // field for populating the Subject, standard and level drop down option
        String[] subject={"",Util.messages.getString("english"),Util.messages.getString("maths"),Util.messages.getString("science"),Util.messages.getString("hindi"),Util.messages.getString("computer"),Util.messages.getString("gk")};
        String[] standard={"","6","7","8","9","10","11","12"};
        String[] level={"","1","2","3","4","5"};
        
        // filled the options that can be selected by the teacher
        subjectField.setModel(new javax.swing.DefaultComboBoxModel(subject));
        standardField.setModel(new javax.swing.DefaultComboBoxModel(standard));
        levelField.setModel(new javax.swing.DefaultComboBoxModel(level));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        keyword = new javax.swing.JLabel();
        subject = new javax.swing.JLabel();
        standard = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        fromDate = new javax.swing.JLabel();
        toDate = new javax.swing.JLabel();
        keywordField = new javax.swing.JTextField();
        fromDateField = new javax.swing.JTextField();
        toDateField = new javax.swing.JTextField();
        subjectField = new javax.swing.JComboBox();
        standardField = new javax.swing.JComboBox();
        levelField = new javax.swing.JComboBox();
        viewButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font(Util.fontURL, 1, 24)); // NOI18N
        jLabel1.setText(Util.messages.getString("viewQuestions"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        keyword.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        keyword.setText(Util.messages.getString("keyword"));

        subject.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        subject.setText(Util.messages.getString("subject"));

        standard.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        standard.setText(Util.messages.getString("standard"));

        level.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        level.setText(Util.messages.getString("level"));

        fromDate.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        fromDate.setText(Util.messages.getString("fromDate"));

        toDate.setFont(new java.awt.Font(Util.fontURL, 1, 15)); // NOI18N
        toDate.setText(Util.messages.getString("toDate"));

        keywordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordFieldActionPerformed(evt);
            }
        });

        toDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDateFieldActionPerformed(evt);
            }
        });

        subjectField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        standardField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        levelField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(level, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(standard, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(keyword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(subject, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fromDateField, keywordField, toDateField});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyword)
                    .addComponent(keywordField))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject)
                    .addComponent(subjectField))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(standard)
                    .addComponent(standardField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(level)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fromDate)
                        .addGap(26, 26, 26)
                        .addComponent(toDate))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fromDateField)
                        .addGap(16, 16, 16)
                        .addComponent(toDateField)))
                .addGap(31, 31, 31))
        );

        viewButton.setText(Util.messages.getString("view"));
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        clearButton.setText(Util.messages.getString("clear"));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        backButton.setText(Util.messages.getString("back"));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(viewButton)
                .addGap(27, 27, 27)
                .addComponent(clearButton)
                .addGap(28, 28, 28)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backButton, clearButton, viewButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(clearButton)
                    .addComponent(backButton))
                .addGap(0, 88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void keywordFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void toDateFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        
        keywordField.setText("");
        subjectField.setSelectedIndex(0);
        standardField.setSelectedIndex(0);
        levelField.setSelectedIndex(0);
        fromDateField.setText("");
        toDateField.setText("");
    }                                           

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
        TeacherOptionGeneral obj=new TeacherOptionGeneral(databaseConnection);
        this.setVisible(false);
        obj.setVisible(true);
    }                                          

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
        int flag=0;
        
        String keyword=new String(keywordField.getText());
        String subject=new String(subjectField.getSelectedItem().toString());
        String standard=new String(standardField.getSelectedItem().toString());
        String level=new String(levelField.getSelectedItem().toString());
        String fromDate=new String(fromDateField.getText());
        String toDate=new String(toDateField.getText());
        
        String query=new String("SELECT * FROM  question_table WHERE ");
        
        // if keyword is selected
        if(!keyword.equals(""))
        {
                query=query.concat("question REGEXP '"+keyword+"' ");
		flag=1;
        }
        
        // if subject is selected
        if(!subject.equals(""))
        {
            if(flag==1)
            {
                query=query.concat("AND ");
            }
            query=query.concat(" subject LIKE '"+subject+"'");
            
            // denoting that one WHERE has been used and AND has to be used in the coming conditions
            flag=1;		
        }
        
        
        // if standard is chosen
        if(!standard.equals(""))
	{
            if(flag==1)		// checking if 1st conditional clause or not
            {
		query=query.concat(" AND");
            }
            query=query.concat(" std LIKE '"+standard+"'");
            flag=1;
        }
        
        // if level is selected
        if(!level.equals(""))
	{
            if(flag==1)		// checking if 1st conditional clause or not
            {
            	query=query.concat(" AND");
            }
            query=query.concat(" level LIKE '"+level+"'");
            flag=1;
        }
        
        // if both the dates are given then the questions within the range will come as the output
	if(!fromDate.equals("") && !toDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date between '"+fromDate+"' AND '"+toDate+"'");
	}
	
	// if From Date is given then the parameter is the lower value 
	else if(!fromDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date > '"+fromDate+"'");
	}
	
	// if To Date is given then the parameter is the higher value
	else if(!toDate.equals(""))
	{
		if(flag==1)
		{
			query=query.concat(" AND");
		}
		query=query.concat(" date < '"+toDate+"'");
	}
        
        ResultSet res;
        try 
        {
            Statement start=(Statement) databaseConnection.createStatement();
            res = (ResultSet)start.executeQuery(query);
            ViewPerformanceInTable obj=new ViewPerformanceInTable();
            
            // creating an object for creating a table for displaying the records fetched
            obj.displayRecord(null, res);
            
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this,Util.messages.getString("pleaseEnterOneField"));
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewQuestionGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewQuestionGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewQuestionGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewQuestionGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ViewQuestionGeneral().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel fromDate;
    private javax.swing.JTextField fromDateField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel keyword;
    private javax.swing.JTextField keywordField;
    private javax.swing.JLabel level;
    private javax.swing.JComboBox levelField;
    private javax.swing.JLabel standard;
    private javax.swing.JComboBox standardField;
    private javax.swing.JLabel subject;
    private javax.swing.JComboBox subjectField;
    private javax.swing.JLabel toDate;
    private javax.swing.JTextField toDateField;
    private javax.swing.JButton viewButton;
    // End of variables declaration                   
}
